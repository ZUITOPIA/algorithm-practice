# 알고리즘의 가장 기본이 되는 방법 - 억지기법 : 문제의 정의를 바탕으로 한 가장 직접적인 방법
# 억지 기법 (brute-force method, naive method) 예 : 최대 공약수 방법, a^n 구하는 알고리즘 등

# 탐색 알고리즘에서 억지 기법을 사용하는 것 : 완전 탐색 (억지 기법의 가장 대표적인 예)

# 억지 기법의 중요성
# 해결하지 못하는 것보다 단순하게라도 해결하는 것이 훨씬 좋고, 쉬운 문제를 어렵게 풀 필요도 없음
# 매우 광범위한 문제에 적용할 수 있는 알고리즘 설계 기법
# 입력의 크기가 작은 경우 속도가 충분히 빠름
# 더 효율적인 알고리즘의 설계와 분석을 위한 이론적인 기반이 됨

# 첫 번째 억지기법 - 선택 정렬
# 최소값을 하나씩 뽑아서 새로 정렬할 때의 단점 : 추가적인 리스트가 필요함 (공간효율성 측면에서 추가적인 저장공간이 필요하지 않도록 구현하는 게 중요)
# 제자리(in-place) 정렬 : 최솟값을 새로운 리스트에 저장하는 것이 아닌 첫번째 요소와 교환하는 방법

# 두 번째 억지기법 - 선택 정렬